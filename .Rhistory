library(ggplot2)
library(httr)
library(XML)
library(dplyr)
library(tidyr)
library(stringr)
library(stringdist)
dplyr::top_n(storms, 2, date)
ggplot2::movies %>%
filter(Animation==1, length<=10) %>%
arrange(year,desc(rating)) %>%
select(title,year,rating) %>%
group_by(year)
ggplot2::movies %>%
filter(Animation==1, length<=10) %>%
arrange(year,desc(rating)) %>%
select(title,year,rating) %>%
group_by(year) %>% top_n(2,yr)
ggplot2::movies %>%
filter(Animation==1, length<=10) %>%
arrange(year,desc(rating)) %>%
select(title,year,rating) %>%
group_by(year) %>% top_n(2,year)
ggplot2::movies %>%
filter(Animation==1, length<=10) %>%
arrange(year,desc(rating)) %>%
select(title,year,rating) %>%
group_by(year) %>% top_n(2)
ggplot2::movies %>%
filter(Animation==1, length<=10) %>%
arrange(year,desc(rating)) %>%
select(title,year,rating) %>%
group_by(year) %>% top_n(3)
ggplot2::movies %>%
filter(Animation==1, length<=10) %>%
arrange(year,desc(rating)) %>%
select(title,year,rating) %>%
group_by(year) %>% top_n(3) %>% View
ggplot2::movies %>%
filter(Animation==1, length<=10) %>%
arrange(year,desc(rating)) %>%
select(title,year,rating) %>%
group_by(year) %>% top_n(3) -> a
# filter(rating == max(rating)) -> a
a$forVideo <- paste('Cartoon "',
a$title,'" (',a$year,')',sep="")
a$surch <- paste(a$title,'</strong> (<strong>',a$year,'</strong>)',sep="")
## OK, now feed each of these 'forVideo' strings into Bing to get
## the search results
## dim the list that will get the bing results
# hits <- as.list(rep("0",length(L)))
hits <- data.frame(SearchTitle=0,Link=0,Title=0,dist=0)
## Sometimes this loop breaks for an unknown reason. If it does, just get value of i
## and replace "1" in for with current value of i.
for (i in 1:length(a$forVideo)){
d <- GET("http://www.bing.com/",
path = "search",
query = list(q = a$forVideo[i]),as="text")
e <- content(d)
## OK, I have a problem... in theory, I should be xpathing this: //div[@class='b_title']
## but for some strange reason it doesn't capture all the links... so go one element above
## and then clean more. :-\
stuff <- xpathSApply(e,"//li[@class='b_algo']",saveXML)
# stuff <- gsub('.+"http://','',stuff)
data.frame(Link = gsub(".+www\\.|.+//","",gsub('h=\\\".+','',stuff)),
Title = gsub('.+>','',gsub('</strong.+','',stuff))) %>%
filter(grepl("youtube.com",Link)) %>% head(1) -> winner
hits[i,1] <- a$title[i]
hits[i,2] <- as.character(winner[1,1])
hits[i,3] <- as.character(winner[1,2])
hits[i,4] <- stringdist(tolower(hits[i,1]),tolower(hits[i,3]),method="qgram")
cat(paste(i,";",sep="")) ## for long waits
}
hits$Year <- a$year
hits %>%
filter(!is.na(Link)) %>%
mutate(Per=dist/nchar(SearchTitle)*100) %>%
select(Year,SearchTitle,Link,Per) %>%
arrange(Year) %>%
View
hits %>%
filter(!is.na(Link)) %>%
mutate(Per=dist/nchar(SearchTitle)*100) %>%
select(Year,SearchTitle,dist,Per) %>%
arrange(Year) %>%
View
hits %>%
filter(!is.na(Link)) %>%
mutate(Per=dist/nchar(SearchTitle)*100)
hits %>%
filter(!is.na(Link)) %>%
mutate(Per=dist/nchar(SearchTitle)*100) %>% View
hits %>%
filter(!is.na(Link)) %>%
mutate(Per=dist/nchar(SearchTitle)*100) %>% View
hits %>%
filter(!is.na(Link)) %>%
mutate(Per=dist/nchar(SearchTitle)*100) %>%
filter(dist<=8,Per<100) %>% View
hits %>%
filter(!is.na(Link)) %>%
mutate(Per=dist/nchar(SearchTitle)*100) %>%
filter(dist<=8,Per<100) %>%
select(Year,SearchTitle,Link,Per) %>%
arrange(Year) %>%
mutate(code=paste(Year,
' - <a target="_blank" href="http://',
Link,
'">',
SearchTitle,
'</a> % error =',
round(Per,0),
'<br><br>',sep="")) %>%
select(code)-> code
hits %>%
filter(!is.na(Link)) %>%
mutate(Per=dist/nchar(SearchTitle)*100) %>%
filter(dist<=8,Per<100) %>%
#   View
#   select(Year,SearchTitle,dist,Per) %>%
#   arrange(Year) %>%
select(Year,SearchTitle,Link,Per) %>%
arrange(Year) %>%
mutate(code=paste(Year,
' - <a target="_blank" href="http://',
Link,
'">',
SearchTitle,
'</a><br><br>',sep="")) %>%
select(code)-> code
hits$code
hits %>%
filter(!is.na(Link)) %>%
mutate(Per=dist/nchar(SearchTitle)*100) %>%
filter(dist<=8,Per<100) %>%
#   View
#   select(Year,SearchTitle,dist,Per) %>%
#   arrange(Year) %>%
select(Year,SearchTitle,Link,Per) %>%
arrange(Year) %>%
mutate(code=paste(Year,
' - <a target="_blank" href="http://',
Link,
'">',
SearchTitle,
'</a><br><br>',sep="")) %>%
select(code)-> code
code
cat("<html><body><br><h1>Cool short movies</h1><p>",
code[,1],
"</p></body></html>",
file="Try 3.html")
setwd("K:/Dropbox/Dropbox/My projects/Movies-animations")
cat("<html><body><br><h1>Cool short movies</h1><p>",
code[,1],
"</p></body></html>",
file="Try 3.html")
hits %>%
filter(!is.na(Link)) %>%
mutate(Per=dist/nchar(SearchTitle)*100) %>%
filter(dist<=8,Per<100) %>%
#   View
#   select(Year,SearchTitle,dist,Per) %>%
#   arrange(Year) %>%
select(Year,SearchTitle,Link,Per) %>%
arrange(Year) %>%
mutate(code=paste(Year,
' - <a target="_blank" href="http://',
Link,
'">',
SearchTitle,
'</a><br><br>',sep="")) -> videoDone
videoDone %>% View
hits %>%
filter(!is.na(Link)) %>%
mutate(Per=dist/nchar(SearchTitle)*100) %>%
filter(dist<=8,Per<100) %>%
#   View
#   select(Year,SearchTitle,dist,Per) %>%
#   arrange(Year) %>%
select(Year,SearchTitle,Link,Per) %>%
arrange(Year) -> videoDone
videoDone$imgSurch <- paste(videoDone$SearchTitle,videoDone$Year,sep="")
videoDone$imgSurch
videoDone$imgSurch <- paste(videoDone$SearchTitle,' (',videoDone$Year,')',sep="")
videoDone$imgSurch
nrow(videoDone)
i=1
d <- GET("http://www.bing.com/images/",
path = "search",
query = list(q = videoDone$imgSurch[i]),as="text")
e <- content(d)
xpathSApply(e,"//li[@class='b_algo']",saveXML)
videoDone$imgSurch[i]
stuff <- xpathSApply(e,"//li[@class='b_algo']",saveXML)[1]
stuff
grepl("img",stuff)
xpathSApply(e,"//img[@class='img_hid']",saveXML)[1]
xpathSApply(e,"//img[@class='img_hid']",saveXML)[1]
e
grepl("img",e)
grepl("img",as.character(e))
e
xpathSApply(e,"//img[@class='img_hid']",saveXML)
xpathSApply(e,"//img",saveXML)
d <- GET("http://www.bing.com/",
path = "search",
query = list(q = videoDone$imgSurch[i]),as="text")
e <- content(d)
xpathSApply(e,"//img",saveXML)
d <- GET("http://images.google.com/",
path = "search",
query = list(q = videoDone$imgSurch[i]),as="text")
e <- content(d)
e
xpathSApply(e,"//a[@id='detail']",saveXML)
d <- GET("http://www.bing.com/images/",
path = "search",
query = list(q = videoDone$imgSurch[i]),as="text")
e <- content(d)
xpathSApply(e,"//a[@id='detail']",saveXML)
xpathSApply(e,"//a",saveXML)
xpathSApply(e,"//img",saveXML)
xpathSApply(e,"//iframe",saveXML)
xpathSApply(e,"//a",saveXML)
d <- GET("http://www.bing.com/",
path = "search",
query = list(q = videoDone$imgSurch[i]),as="text")
e <- content(d)
stuff <- xpathSApply(e,"//li[@class='b_algo']",saveXML)
stuff
stuff[1]
grepl("img",stuff)
# stuff <- gsub('.+"http://','',stuff)
d <- GET("https://images.search.yahoo.com/",
path = "search",
query = list(q = videoDone$imgSurch[i]),as="text")
e <- content(d)
# stuff <- gsub('.+"http://','',stuff)e
e
videoDone$imgSurch[i]
d <- GET("https://duckduckgo.com",
path = "search",
query = list(q = videoDone$imgSurch[i]),&iax=1&ia=images)
d <- GET("https://duckduckgo.com",
path = "search",
query = list(q = videoDone$imgSurch[i]),iax=1,ia=images)
d <- GET("https://duckduckgo.com",
path = "search",
query = list(q = videoDone$imgSurch[i]),iax=1,ia="images")
e <- content(d)
e
d <- GET("https://duckduckgo.com",
query = list(q = videoDone$imgSurch[i]),iax=1,ia="images")
e <- content(d)
e
xpathSApply(e,"//a",saveXML)
xpathSApply(e,"//div[class='tile  tile--img  has-detail'",saveXML)
xpathSApply(e,"//div[@class='tile  tile--img  has-detail'",saveXML)
xpathSApply(e,"//div[@class='tile'",saveXML)
xpathSApply(e,"//div[@class='tile']",saveXML)
xpathSApply(e,"//div[@class='tile  tile--img  has-detail']",saveXML)
